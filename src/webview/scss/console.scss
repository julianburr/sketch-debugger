.console {
  flex: 1;
  background: none $colors-background;

  .filter {
    &.search {
      .indicator {
        position: absolute;
        bottom: .6rem;
        right: .6rem;
        width: 1rem;
        height: 1rem;
        border-radius: .6rem;
        background: none $colors-green;
        transform: scale(0);
        transition: transform .2s;

        &.active {
          transform: scale(1);
        }
      }
    }

    .search-panel {
      position: absolute;
      z-index: 500;
      top: 0;
      left: 100%;
      margin: 0 0 0 -.4rem;
      height: 4rem;
      opacity: 0;
      transform: scale(.1);
      transform-origin: left center;
      transition: opacity .3s, transform .2s;

      &.active {
        opacity: 1;
        transform: scale(1);
      }

      input {
        height: 100%;
        width: 20rem;
        border: 0 none;
        padding: 0 4rem 0 1rem;
        box-shadow: $shadows-box-medium;
        background: none $colors-white;
      }

      .clear-search {
        position: absolute;
        top: 0;
        right: 0;
        padding: 0 1rem;
        line-height: 3.2rem;
        background: none;
        border: 0 none;
        opacity: 0;
        transform: scale(0);
        transition: opacity .2s, transform .2s;

        &.visible {
          opacity: .5;
          transform: scale(1);

          &:hover {
            opacity: 1;
          }
        }
      }
    }

    &.log-types {
      margin: 2rem 0 0;

      .type {
        position: relative;
        overflow: hidden;
        text-indent: -900rem;

        &:hover {
          background: none transparent;
        }

        &:before {
          content: ' ';
          position: absolute;
          top: 50%;
          left: 50%;
          margin: -.9rem 0 0 -.9rem;
          width: 1.8rem;
          height: 1.8rem;
          border-radius: .2rem;
          background: none $colors-grey-light;
          transition: background .2s;
        }

        &:hover:before {
          background: none darken($colors-grey-light, 4%);
        }

        &.type-default {
          &.active:before,
          &.active:hover:before {
            background: none $colors-blue;
          }
        }

        &.type-warning {
          &.active:before,
          &.active:hover:before {
            background: none $colors-yellow;
          }
        }

        &.type-error {
          &.active:before,
          &.active:hover:before {
            background: none $colors-red;
          }
        }
      }
    }

    &.show-log-times {
      margin: 2rem 0 0;
    }

    &.clear-console {
      position: absolute;
      bottom: 0;
      left: 0;
    }
  }

  .log-list {
    flex: 1;
    padding: .6rem;
    overflow: auto;
    display: flex;
    flex-direction: column;

    .nologs {
      color: $colors-grey;
      text-align: center;
      margin: 4rem 0 0;
      width: 24rem;
      align-self: center;
    }

    ul,
    ul li {
      margin: 0;
      padding: 0;
      display: inline-block;
      list-style: none;
    }

    li.log {
      background: none $colors-white;
      padding: 1rem .5rem;
      margin: .2rem 0 0;
      font-size: 1.1rem;
      font-family: $fonts-mono;
      flex-direction: row;
      display: flex;
      align-items: flex-start;
      justify-content: flex-start;
      width: 100%;
      line-height: 1.6;

      &.log-error {
        background: none $colors-red;
      }

      &.log-warning {
        background: none $colors-yellow;
      }

      &.log-error,
      &.log-warning {
        color: $colors-white;

        .values li.value {
          .log-key,
          .log-string .log-value,
          .log-number .log-value {
            color: $colors-white;
          }

          .log-array,
          .log-object {
            .log-value-type,
            .log-value-length,
            .log-colon {
              color: $colors-white;
            }
          }

          .log-class {
            .log-name,
            .log-prop-value {
              color: $colors-white;
            }
          }

          /*&.selected,
          &:hover {
            background: none rgba(255, 255, 255, .1);
          }*/
        }
      }

      /*.values .value {
        &.selected,
        &:hover {
          background: none rgba(0, 0, 0, .05);
        }
      }*/

      &:first-child {
        margin: 0;
      }

      .timestamp {
        opacity: .3;
        padding: .3rem 1.2rem 0 0;
      }

      .values {
        flex: 1;

        li.value {
          margin: 0 .6rem 0;
          padding: .3rem .4rem .2rem;
          border-radius: .2rem;
          cursor: pointer;
          vertical-align: top;

          .log-key {
            color: $colors-purple;
            padding: 0 0 0 1.2rem;
          }

          .log-array,
          .log-object {
            .log-value-type,
            .log-key,
            .log-colon,
            .log-value-length {
              font-style: italic;
            }

            > span > .log-key {
              padding: 0;
            }

            .log-value-length,
            .log-colon {
              opacity: .5;
            }
          }

          .log-string .log-value {
            color: darken($colors-red, 15%);
          }

          .log-number .log-value {
            color: darken($colors-blue, 15%);
          }

          .log-empty .log-value {
            opacity: .5;
            color: inherit;
            font-style: italic;
          }

          .log-class {
            .log-tag-open,
            .log-tag-close {
              opacity: .5;
            }

            .log-name {
              color: $colors-purple;
            }

            .log-prop-name,
            .log-prop-equal {
              opacity: .5;
              font-style: italic;
            }

            .log-prop-value {
              color: darken($colors-red, 15%);
            }
          }

          .log-object,
          .log-array {
            & > ul {
              padding: 0 0 0 1.2rem;
            }

            &.expanded {
              & > ul,
              & > ul > li {
                display: block;
                width: 100%;
              }

              > .button-toggle {
                transform: rotate(90deg);
              }
            }

            .button-toggle {
              color: inherit;
              overflow: hidden;
              position: relative;
              border: 0 none;
              background: none transparent;
              text-indent: -100rem;
              padding: 0;
              margin: .2rem 0 0;
              width: 1.2rem;
              height: 1.2rem;
              transition: transform .2s;

              &:before {
                content: ' ';
                position: absolute;
                top: 50%;
                left: 50%;
                margin: -.4rem 0 0 -.3rem;
                width: 0;
                height: 0;
                border-style: solid;
                border-width: .4rem 0 .4rem .6rem;
                border-color: transparent transparent transparent currentColor;
              }
            }
          }
        }
      }

      .file {
        opacity: .3;
        padding: 0 0 0 1.2rem;
      }
    }
  }
}
